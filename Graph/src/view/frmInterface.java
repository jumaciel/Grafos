package view;

import br.com.davesmartins.graphviewlib.ViewGraph;
import br.com.davesmartins.graphviewlib.erro.EGraphViewExcpetion;
import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.DomDriver;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;
import javax.swing.filechooser.FileNameExtensionFilter;
import model.Edge;
import model.Graph;
import model.Graphml;
import model.Node;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Luiz Fernando
 */
public class frmInterface extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    Graph graph = new Graph();
    Graphml graphml = new Graphml();
    private String choose = null;
    List<Node> listaNode = new ArrayList<Node>();
    List<Edge> listaEdge = new ArrayList<Edge>();
    List<Edge> listaRec = new ArrayList<Edge>();
    int w = 0;
    int h = 0;
    int m;

    public frmInterface() {
//        centralizarComponente();
        this.setResizable(false);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu2 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        iconNovo = new javax.swing.JLabel();
        iconAbrir = new javax.swing.JLabel();
        iconSalvar = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        btnMatrizAdj = new javax.swing.JButton();
        btnMatrizInc = new javax.swing.JButton();
        btnListaAdj = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        display = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        btnAdicionarVertice = new javax.swing.JButton();
        txtaddVertice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnAlterarVertice = new javax.swing.JButton();
        btnDeletarVertice = new javax.swing.JButton();
        verticeAlterar = new javax.swing.JPanel();
        cbEditarVertice = new javax.swing.JComboBox<>();
        txtNovoVertice = new javax.swing.JTextField();
        lblNo = new javax.swing.JLabel();
        lblNovo = new javax.swing.JLabel();
        btnConfirmarVertice = new javax.swing.JButton();
        btnCancelarVertice = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        cbVerificaOrigem = new javax.swing.JComboBox<>();
        lblNo1 = new javax.swing.JLabel();
        lblNo3 = new javax.swing.JLabel();
        cbVerificaDestino = new javax.swing.JComboBox<>();
        btnConfirmarVertice1 = new javax.swing.JButton();
        btnCancelarVertice1 = new javax.swing.JButton();
        lblNo2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        btnAdicionarAresta = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cbDestino = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        txtNomeAresta = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        btndeletarAresta = new javax.swing.JButton();
        btnAlterarAresta = new javax.swing.JButton();
        txtPesoAresta = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cbOrigem = new javax.swing.JComboBox<>();
        arestaAlterar = new javax.swing.JPanel();
        lblArco = new javax.swing.JLabel();
        arco = new javax.swing.JPanel();
        lblOrigem = new javax.swing.JLabel();
        lblDestino = new javax.swing.JLabel();
        cbEditarOrigem = new javax.swing.JComboBox<>();
        cbEditarDestino = new javax.swing.JComboBox<>();
        novoArco = new javax.swing.JPanel();
        lblNovaOrigem = new javax.swing.JLabel();
        lblNovoDestino = new javax.swing.JLabel();
        cbNovaOrigem = new javax.swing.JComboBox<>();
        cbNovoDestino = new javax.swing.JComboBox<>();
        lblNovoNomeArco = new javax.swing.JLabel();
        txtNovoNomeAresta = new javax.swing.JTextField();
        lblNovoPeso = new javax.swing.JLabel();
        txtNovoPeso = new javax.swing.JTextField();
        lblArco1 = new javax.swing.JLabel();
        btnConfirmarAresta = new javax.swing.JButton();
        btnCancelarAresta = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        lblNomeGrafo = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        lblTipoGrafo = new javax.swing.JLabel();
        btnLimpaVA = new javax.swing.JButton();
        btnLimpaAresta = new javax.swing.JButton();
        btnMostrarVA = new javax.swing.JButton();
        btnGerarGrafico = new javax.swing.JButton();
        btnBuscaProf = new javax.swing.JButton();
        btnDijkstra = new javax.swing.JButton();
        btnKruskal = new javax.swing.JButton();
        btnPrim = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuArquivo = new javax.swing.JMenu();
        menuNovo = new javax.swing.JMenuItem();
        menuAbrir = new javax.swing.JMenuItem();
        menuSalvar = new javax.swing.JMenuItem();
        menuSair = new javax.swing.JMenuItem();
        menuExibir = new javax.swing.JMenu();
        menuOrdem = new javax.swing.JMenuItem();
        menuGrau = new javax.swing.JMenuItem();
        menuGrauRecepcao = new javax.swing.JMenuItem();
        menuGrauEmissao = new javax.swing.JMenuItem();
        menuMatriz = new javax.swing.JMenuItem();
        menuFonte = new javax.swing.JMenuItem();
        menuSumidouro = new javax.swing.JMenuItem();
        menuIncidentes = new javax.swing.JMenuItem();
        menuInfo = new javax.swing.JMenuItem();
        menuAdjacente = new javax.swing.JMenuItem();
        menuConjunto = new javax.swing.JMenuItem();

        jMenu2.setText("jMenu2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 51));
        setForeground(new java.awt.Color(102, 255, 102));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(226, 226, 226));

        iconNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/novo.png"))); // NOI18N
        iconNovo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iconNovo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconNovoMouseClicked(evt);
            }
        });

        iconAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/abrir.png"))); // NOI18N
        iconAbrir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iconAbrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconAbrirMouseClicked(evt);
            }
        });

        iconSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/salvarComo.png"))); // NOI18N
        iconSalvar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        iconSalvar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconSalvarMouseClicked(evt);
            }
        });

        btnMatrizAdj.setBackground(new java.awt.Color(255, 255, 255));
        btnMatrizAdj.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnMatrizAdj.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/ma.png"))); // NOI18N
        btnMatrizAdj.setText("Matriz Adj");
        btnMatrizAdj.setBorder(null);
        btnMatrizAdj.setContentAreaFilled(false);
        btnMatrizAdj.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMatrizAdj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMatrizAdjActionPerformed(evt);
            }
        });

        btnMatrizInc.setBackground(new java.awt.Color(255, 255, 255));
        btnMatrizInc.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnMatrizInc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/mi.png"))); // NOI18N
        btnMatrizInc.setText("Matriz Inc");
        btnMatrizInc.setBorder(null);
        btnMatrizInc.setContentAreaFilled(false);
        btnMatrizInc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMatrizInc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMatrizIncActionPerformed(evt);
            }
        });

        btnListaAdj.setBackground(new java.awt.Color(255, 255, 255));
        btnListaAdj.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnListaAdj.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/la.png"))); // NOI18N
        btnListaAdj.setText("Lista Adj");
        btnListaAdj.setBorder(null);
        btnListaAdj.setContentAreaFilled(false);
        btnListaAdj.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnListaAdj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListaAdjActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(iconNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(iconAbrir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(iconSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnMatrizAdj, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnMatrizInc, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnListaAdj, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(iconAbrir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(iconSalvar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnMatrizInc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnListaAdj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnMatrizAdj))
                    .addComponent(iconNovo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jScrollPane1.setBackground(new java.awt.Color(0, 0, 0));

        display.setEditable(false);
        display.setBackground(new java.awt.Color(233, 233, 233));
        display.setColumns(20);
        display.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        display.setRows(5);
        display.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setViewportView(display);

        jPanel3.setBackground(new java.awt.Color(229, 229, 229));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnAdicionarVertice.setBackground(new java.awt.Color(255, 255, 255));
        btnAdicionarVertice.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnAdicionarVertice.setText("Adicionar");
        btnAdicionarVertice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnAdicionarVertice.setContentAreaFilled(false);
        btnAdicionarVertice.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdicionarVertice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAdicionarVerticeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAdicionarVerticeMouseExited(evt);
            }
        });
        btnAdicionarVertice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarVerticeActionPerformed(evt);
            }
        });

        txtaddVertice.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtaddVertice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setText("Nome");

        btnAlterarVertice.setBackground(new java.awt.Color(255, 255, 255));
        btnAlterarVertice.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnAlterarVertice.setText("Alterar");
        btnAlterarVertice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnAlterarVertice.setContentAreaFilled(false);
        btnAlterarVertice.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAlterarVertice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAlterarVerticeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAlterarVerticeMouseExited(evt);
            }
        });
        btnAlterarVertice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarVerticeActionPerformed(evt);
            }
        });

        btnDeletarVertice.setBackground(new java.awt.Color(255, 255, 255));
        btnDeletarVertice.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnDeletarVertice.setText("Deletar");
        btnDeletarVertice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnDeletarVertice.setContentAreaFilled(false);
        btnDeletarVertice.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDeletarVertice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDeletarVerticeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDeletarVerticeMouseExited(evt);
            }
        });
        btnDeletarVertice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarVerticeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtaddVertice, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdicionarVertice, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDeletarVertice, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAlterarVertice, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAlterarVertice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDeletarVertice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAdicionarVertice, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(txtaddVertice))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        verticeAlterar.setBackground(java.awt.Color.gray);
        verticeAlterar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtNovoVertice.setEditable(false);
        txtNovoVertice.setBackground(java.awt.Color.gray);
        txtNovoVertice.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtNovoVertice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblNo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblNo.setText("Nome");

        lblNovo.setBackground(new java.awt.Color(204, 204, 204));
        lblNovo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblNovo.setText("Novo nome");

        btnConfirmarVertice.setBackground(new java.awt.Color(255, 255, 255));
        btnConfirmarVertice.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnConfirmarVertice.setText("Confirmar");
        btnConfirmarVertice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnConfirmarVertice.setContentAreaFilled(false);
        btnConfirmarVertice.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConfirmarVertice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnConfirmarVerticeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnConfirmarVerticeMouseExited(evt);
            }
        });
        btnConfirmarVertice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarVerticeActionPerformed(evt);
            }
        });

        btnCancelarVertice.setBackground(new java.awt.Color(255, 255, 255));
        btnCancelarVertice.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnCancelarVertice.setText("Cancelar");
        btnCancelarVertice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnCancelarVertice.setContentAreaFilled(false);
        btnCancelarVertice.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelarVertice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCancelarVerticeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCancelarVerticeMouseExited(evt);
            }
        });
        btnCancelarVertice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarVerticeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout verticeAlterarLayout = new javax.swing.GroupLayout(verticeAlterar);
        verticeAlterar.setLayout(verticeAlterarLayout);
        verticeAlterarLayout.setHorizontalGroup(
            verticeAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(verticeAlterarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(verticeAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(verticeAlterarLayout.createSequentialGroup()
                        .addComponent(cbEditarVertice, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNovoVertice, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnConfirmarVertice, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelarVertice, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(verticeAlterarLayout.createSequentialGroup()
                        .addComponent(lblNo)
                        .addGap(33, 33, 33)
                        .addComponent(lblNovo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        verticeAlterarLayout.setVerticalGroup(
            verticeAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, verticeAlterarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(verticeAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNo, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblNovo, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(verticeAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(verticeAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cbEditarVertice)
                        .addComponent(txtNovoVertice, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(verticeAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnCancelarVertice, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, verticeAlterarLayout.createSequentialGroup()
                            .addGap(2, 2, 2)
                            .addComponent(btnConfirmarVertice, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblNo1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblNo1.setText("Origem");

        lblNo3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblNo3.setText("Destino");

        btnConfirmarVertice1.setBackground(new java.awt.Color(255, 255, 255));
        btnConfirmarVertice1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnConfirmarVertice1.setText("Confirmar");
        btnConfirmarVertice1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnConfirmarVertice1.setContentAreaFilled(false);
        btnConfirmarVertice1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConfirmarVertice1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnConfirmarVertice1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnConfirmarVertice1MouseExited(evt);
            }
        });
        btnConfirmarVertice1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarVertice1ActionPerformed(evt);
            }
        });

        btnCancelarVertice1.setBackground(new java.awt.Color(255, 255, 255));
        btnCancelarVertice1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnCancelarVertice1.setText("Cancelar");
        btnCancelarVertice1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnCancelarVertice1.setContentAreaFilled(false);
        btnCancelarVertice1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelarVertice1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCancelarVertice1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCancelarVertice1MouseExited(evt);
            }
        });
        btnCancelarVertice1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarVertice1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbVerificaOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNo1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbVerificaDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNo3))
                .addGap(30, 30, 30)
                .addComponent(btnConfirmarVertice1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelarVertice1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNo1)
                    .addComponent(lblNo3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCancelarVertice1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnConfirmarVertice1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbVerificaOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbVerificaDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        lblNo2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblNo2.setText("Caminho \\ Cadeia");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblNo2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 260, Short.MAX_VALUE))
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(verticeAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(verticeAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNo2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("Vertice");

        jLabel6.setBackground(new java.awt.Color(102, 255, 102));
        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setText("Aresta");

        jPanel6.setBackground(new java.awt.Color(229, 229, 229));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnAdicionarAresta.setBackground(new java.awt.Color(255, 255, 255));
        btnAdicionarAresta.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnAdicionarAresta.setText("Adicionar");
        btnAdicionarAresta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnAdicionarAresta.setContentAreaFilled(false);
        btnAdicionarAresta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdicionarAresta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAdicionarArestaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAdicionarArestaMouseExited(evt);
            }
        });
        btnAdicionarAresta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarArestaActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setText("Origem");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel9.setText("Destino");

        txtNomeAresta.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtNomeAresta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtNomeAresta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeArestaActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel10.setText("Nome");

        btndeletarAresta.setBackground(new java.awt.Color(255, 255, 255));
        btndeletarAresta.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btndeletarAresta.setText("Deletar");
        btndeletarAresta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btndeletarAresta.setContentAreaFilled(false);
        btndeletarAresta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btndeletarAresta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btndeletarArestaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btndeletarArestaMouseExited(evt);
            }
        });
        btndeletarAresta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeletarArestaActionPerformed(evt);
            }
        });

        btnAlterarAresta.setBackground(new java.awt.Color(255, 255, 255));
        btnAlterarAresta.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnAlterarAresta.setText("Alterar");
        btnAlterarAresta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnAlterarAresta.setContentAreaFilled(false);
        btnAlterarAresta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAlterarAresta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAlterarArestaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAlterarArestaMouseExited(evt);
            }
        });
        btnAlterarAresta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarArestaActionPerformed(evt);
            }
        });

        txtPesoAresta.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtPesoAresta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel13.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel13.setText("Peso");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(214, 214, 214)
                        .addComponent(txtPesoAresta, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(cbDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(txtNomeAresta, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnAdicionarAresta, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btndeletarAresta, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAlterarAresta, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNomeAresta, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                            .addComponent(txtPesoAresta)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbOrigem, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(cbDestino))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdicionarAresta, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btndeletarAresta, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAlterarAresta, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        arestaAlterar.setBackground(java.awt.Color.gray);
        arestaAlterar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblArco.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblArco.setText("Arco");

        arco.setBackground(java.awt.Color.gray);
        arco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblOrigem.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblOrigem.setText("Origem");

        lblDestino.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblDestino.setText("Destino");

        javax.swing.GroupLayout arcoLayout = new javax.swing.GroupLayout(arco);
        arco.setLayout(arcoLayout);
        arcoLayout.setHorizontalGroup(
            arcoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(arcoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(arcoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbEditarOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOrigem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(arcoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbEditarDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDestino, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        arcoLayout.setVerticalGroup(
            arcoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(arcoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(arcoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(arcoLayout.createSequentialGroup()
                        .addComponent(lblDestino)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbEditarDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(arcoLayout.createSequentialGroup()
                        .addComponent(lblOrigem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbEditarOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        novoArco.setBackground(java.awt.Color.gray);
        novoArco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblNovaOrigem.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblNovaOrigem.setText("Origem");

        lblNovoDestino.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblNovoDestino.setText("Destino");

        lblNovoNomeArco.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblNovoNomeArco.setText("Nome");

        txtNovoNomeAresta.setEditable(false);
        txtNovoNomeAresta.setBackground(java.awt.Color.gray);
        txtNovoNomeAresta.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtNovoNomeAresta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtNovoNomeAresta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNovoNomeArestaActionPerformed(evt);
            }
        });

        lblNovoPeso.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblNovoPeso.setText("Peso");

        txtNovoPeso.setEditable(false);
        txtNovoPeso.setBackground(java.awt.Color.gray);
        txtNovoPeso.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txtNovoPeso.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout novoArcoLayout = new javax.swing.GroupLayout(novoArco);
        novoArco.setLayout(novoArcoLayout);
        novoArcoLayout.setHorizontalGroup(
            novoArcoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(novoArcoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(novoArcoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbNovaOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNovaOrigem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(novoArcoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbNovoDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNovoDestino, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(novoArcoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(novoArcoLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(lblNovoNomeArco))
                    .addGroup(novoArcoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNovoNomeAresta)))
                .addGroup(novoArcoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(novoArcoLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(lblNovoPeso))
                    .addGroup(novoArcoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNovoPeso)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        novoArcoLayout.setVerticalGroup(
            novoArcoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(novoArcoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(novoArcoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(novoArcoLayout.createSequentialGroup()
                        .addComponent(lblNovoNomeArco)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNovoNomeAresta))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, novoArcoLayout.createSequentialGroup()
                        .addComponent(lblNovoDestino)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbNovoDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, novoArcoLayout.createSequentialGroup()
                        .addComponent(lblNovaOrigem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbNovaOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(novoArcoLayout.createSequentialGroup()
                        .addComponent(lblNovoPeso)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNovoPeso)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblArco1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblArco1.setText("Novo");

        btnConfirmarAresta.setBackground(new java.awt.Color(255, 255, 255));
        btnConfirmarAresta.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnConfirmarAresta.setText("Confirmar");
        btnConfirmarAresta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnConfirmarAresta.setContentAreaFilled(false);
        btnConfirmarAresta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConfirmarAresta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnConfirmarArestaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnConfirmarArestaMouseExited(evt);
            }
        });
        btnConfirmarAresta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarArestaActionPerformed(evt);
            }
        });

        btnCancelarAresta.setBackground(new java.awt.Color(255, 255, 255));
        btnCancelarAresta.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnCancelarAresta.setText("Cancelar");
        btnCancelarAresta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnCancelarAresta.setContentAreaFilled(false);
        btnCancelarAresta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelarAresta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCancelarArestaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCancelarArestaMouseExited(evt);
            }
        });
        btnCancelarAresta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarArestaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout arestaAlterarLayout = new javax.swing.GroupLayout(arestaAlterar);
        arestaAlterar.setLayout(arestaAlterarLayout);
        arestaAlterarLayout.setHorizontalGroup(
            arestaAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(arestaAlterarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(arestaAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(arestaAlterarLayout.createSequentialGroup()
                        .addComponent(btnConfirmarAresta, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancelarAresta, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(arestaAlterarLayout.createSequentialGroup()
                        .addGroup(arestaAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(arco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblArco))
                        .addGap(18, 18, 18)
                        .addGroup(arestaAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblArco1)
                            .addComponent(novoArco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        arestaAlterarLayout.setVerticalGroup(
            arestaAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(arestaAlterarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(arestaAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(novoArco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(arestaAlterarLayout.createSequentialGroup()
                        .addGroup(arestaAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblArco)
                            .addComponent(lblArco1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(arco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(arestaAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelarAresta, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConfirmarAresta, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(arestaAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(arestaAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jLabel15.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel15.setText("Nome:");

        lblNomeGrafo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblNomeGrafo.setText("none");

        jLabel16.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel16.setText("Tipo:");

        lblTipoGrafo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblTipoGrafo.setText("none");

        btnLimpaVA.setBackground(new java.awt.Color(255, 255, 255));
        btnLimpaVA.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnLimpaVA.setText("Limpar V/A");
        btnLimpaVA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnLimpaVA.setContentAreaFilled(false);
        btnLimpaVA.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpaVA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnLimpaVAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnLimpaVAMouseExited(evt);
            }
        });
        btnLimpaVA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpaVAActionPerformed(evt);
            }
        });

        btnLimpaAresta.setBackground(new java.awt.Color(255, 255, 255));
        btnLimpaAresta.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnLimpaAresta.setText("Limpar arestas");
        btnLimpaAresta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnLimpaAresta.setContentAreaFilled(false);
        btnLimpaAresta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpaAresta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnLimpaArestaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnLimpaArestaMouseExited(evt);
            }
        });
        btnLimpaAresta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpaArestaActionPerformed(evt);
            }
        });

        btnMostrarVA.setBackground(new java.awt.Color(255, 255, 255));
        btnMostrarVA.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnMostrarVA.setText("Mostrar V/A");
        btnMostrarVA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnMostrarVA.setContentAreaFilled(false);
        btnMostrarVA.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMostrarVA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnMostrarVAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnMostrarVAMouseExited(evt);
            }
        });
        btnMostrarVA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarVAActionPerformed(evt);
            }
        });

        btnGerarGrafico.setBackground(new java.awt.Color(255, 255, 255));
        btnGerarGrafico.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnGerarGrafico.setText("Gerar grafico");
        btnGerarGrafico.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnGerarGrafico.setContentAreaFilled(false);
        btnGerarGrafico.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGerarGrafico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnGerarGraficoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnGerarGraficoMouseExited(evt);
            }
        });
        btnGerarGrafico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarGraficoActionPerformed(evt);
            }
        });

        btnBuscaProf.setBackground(new java.awt.Color(255, 255, 255));
        btnBuscaProf.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnBuscaProf.setText("Busca Prof.");
        btnBuscaProf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnBuscaProf.setContentAreaFilled(false);
        btnBuscaProf.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscaProf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBuscaProfMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBuscaProfMouseExited(evt);
            }
        });
        btnBuscaProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscaProfActionPerformed(evt);
            }
        });

        btnDijkstra.setBackground(new java.awt.Color(255, 255, 255));
        btnDijkstra.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnDijkstra.setText("Dijkstra");
        btnDijkstra.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnDijkstra.setContentAreaFilled(false);
        btnDijkstra.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDijkstra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDijkstraMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDijkstraMouseExited(evt);
            }
        });
        btnDijkstra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDijkstraActionPerformed(evt);
            }
        });

        btnKruskal.setBackground(new java.awt.Color(255, 255, 255));
        btnKruskal.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnKruskal.setText("Kruskal");
        btnKruskal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnKruskal.setContentAreaFilled(false);
        btnKruskal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnKruskal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnKruskalMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnKruskalMouseExited(evt);
            }
        });
        btnKruskal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKruskalActionPerformed(evt);
            }
        });

        btnPrim.setBackground(new java.awt.Color(255, 255, 255));
        btnPrim.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnPrim.setText("Prim");
        btnPrim.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnPrim.setContentAreaFilled(false);
        btnPrim.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPrim.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnPrimMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnPrimMouseExited(evt);
            }
        });
        btnPrim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrimActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblNomeGrafo, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTipoGrafo, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(432, 432, 432))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnLimpaVA, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnLimpaAresta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(btnMostrarVA, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnGerarGrafico, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBuscaProf, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDijkstra, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnKruskal, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPrim, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTipoGrafo, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNomeGrafo, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLimpaVA, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPrim, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLimpaAresta, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnKruskal, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnMostrarVA, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDijkstra, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGerarGrafico, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscaProf, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 29, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        menuArquivo.setText("Arquivo");

        menuNovo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        menuNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/novo.png"))); // NOI18N
        menuNovo.setText("Novo");
        menuNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNovoActionPerformed(evt);
            }
        });
        menuArquivo.add(menuNovo);

        menuAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        menuAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/abrir.png"))); // NOI18N
        menuAbrir.setText("Abrir");
        menuAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAbrirActionPerformed(evt);
            }
        });
        menuArquivo.add(menuAbrir);

        menuSalvar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        menuSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/salvarComo.png"))); // NOI18N
        menuSalvar.setText("Salvar como...");
        menuSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSalvarActionPerformed(evt);
            }
        });
        menuArquivo.add(menuSalvar);

        menuSair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        menuSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/sair.png"))); // NOI18N
        menuSair.setText("Sair");
        menuSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSairActionPerformed(evt);
            }
        });
        menuArquivo.add(menuSair);

        jMenuBar1.add(menuArquivo);

        menuExibir.setText("Exibir");

        menuOrdem.setText("Ordem");
        menuOrdem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuOrdemActionPerformed(evt);
            }
        });
        menuExibir.add(menuOrdem);

        menuGrau.setText("Grau");
        menuGrau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuGrauActionPerformed(evt);
            }
        });
        menuExibir.add(menuGrau);

        menuGrauRecepcao.setText("Grau de recepção");
        menuGrauRecepcao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuGrauRecepcaoActionPerformed(evt);
            }
        });
        menuExibir.add(menuGrauRecepcao);

        menuGrauEmissao.setText("Grau de emissão");
        menuGrauEmissao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuGrauEmissaoActionPerformed(evt);
            }
        });
        menuExibir.add(menuGrauEmissao);

        menuMatriz.setText("Matrizes");
        menuMatriz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuMatrizActionPerformed(evt);
            }
        });
        menuExibir.add(menuMatriz);

        menuFonte.setText("Fonte");
        menuFonte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFonteActionPerformed(evt);
            }
        });
        menuExibir.add(menuFonte);

        menuSumidouro.setText("Sumidouro");
        menuSumidouro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSumidouroActionPerformed(evt);
            }
        });
        menuExibir.add(menuSumidouro);

        menuIncidentes.setText("Incidentes");
        menuIncidentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuIncidentesActionPerformed(evt);
            }
        });
        menuExibir.add(menuIncidentes);

        menuInfo.setText("Tipo");
        menuInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuInfoActionPerformed(evt);
            }
        });
        menuExibir.add(menuInfo);

        menuAdjacente.setText("Adjacentes");
        menuAdjacente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAdjacenteActionPerformed(evt);
            }
        });
        menuExibir.add(menuAdjacente);

        menuConjunto.setText("Conjunto");
        menuConjunto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuConjuntoActionPerformed(evt);
            }
        });
        menuExibir.add(menuConjunto);

        jMenuBar1.add(menuExibir);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAbrirActionPerformed
        abrirArquivo();
    }//GEN-LAST:event_menuAbrirActionPerformed

    private void menuSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSalvarActionPerformed
        salvarArquivo();
    }//GEN-LAST:event_menuSalvarActionPerformed

    private void menuSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_menuSairActionPerformed

    private void menuInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuInfoActionPerformed
        if (graph.completo() == true) {
            display.setText("Grafo Completo");
        } else if (graph.regular() == true) {
            display.setText("Grafo Regular");
        } else if (graph.multigrafo() == true) {
            display.setText("Multigrafo");
        }
    }//GEN-LAST:event_menuInfoActionPerformed

    private void menuNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNovoActionPerformed
        novoArquivo();
    }//GEN-LAST:event_menuNovoActionPerformed

    private void menuMatrizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuMatrizActionPerformed
        display.setText("\t==========Matriz Adjacência==========\n\n" + graph.matrizAdjacencia() + "\n\n\n"
                + "\t==========Matriz Incidência==========\n\n" + graph.matrizIncidencia(graph) + "\n\n\n"
                + "\t==========Lista Adjacência==========\n\n" + graph.listaAdjacencia(graph));
    }//GEN-LAST:event_menuMatrizActionPerformed

    private void menuIncidentesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuIncidentesActionPerformed
        display.setText("\t==========Incidentes==========\n\n" + graph.getIncidentes());
    }//GEN-LAST:event_menuIncidentesActionPerformed

    private void menuAdjacenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAdjacenteActionPerformed
        display.setText("\t==========Adjacentes==========\n\n" + graph.getAdjacentes());
    }//GEN-LAST:event_menuAdjacenteActionPerformed

    private void menuConjuntoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuConjuntoActionPerformed
        display.setText("\t==========Conjunto==========\n\n" + graph.conjunto(graph));
    }//GEN-LAST:event_menuConjuntoActionPerformed

    private void menuGrauRecepcaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuGrauRecepcaoActionPerformed
        if (graph.getEdgedefault().equals("directed")) {
            display.setText(graph.grauRecepcao());
        } else {
            display.setText("Não se aplica em grafo  não orientado");
        }
    }//GEN-LAST:event_menuGrauRecepcaoActionPerformed

    private void menuGrauEmissaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuGrauEmissaoActionPerformed
        if (graph.getEdgedefault().equals("directed")) {
            display.setText(graph.grauEmissao());
        } else {
            display.setText("Não se aplica em grafo  não orientado");
        }
    }//GEN-LAST:event_menuGrauEmissaoActionPerformed

    private void menuFonteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFonteActionPerformed
        if (graph.getEdgedefault().equals("directed")) {
            display.setText(graph.fonte());
        } else {
            display.setText("Não se aplica em grafo  não orientado");
        }
    }//GEN-LAST:event_menuFonteActionPerformed

    private void menuSumidouroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSumidouroActionPerformed
        if (graph.getEdgedefault().equals("directed")) {
            display.setText(graph.sumidouro());
        } else {
            display.setText("Não se aplica em grafo  não orientado");
        }
    }//GEN-LAST:event_menuSumidouroActionPerformed

    private void menuOrdemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuOrdemActionPerformed
        display.setText("\t========== Ordem ==========\n\nOrdem do Grafo é: " + graph.getNodes().size());
    }//GEN-LAST:event_menuOrdemActionPerformed

    private void menuGrauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuGrauActionPerformed
        display.setText("\t========== Grau ==========\n" + graph.getGrau());
    }//GEN-LAST:event_menuGrauActionPerformed

    private void btnAlterarArestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarArestaActionPerformed
        txtNovoNomeAresta.setBackground(Color.white);
        txtNovoPeso.setBackground(Color.white);

        txtNovoNomeAresta.setEditable(true);
        txtNovoPeso.setEditable(true);

        arestaAlterar.setBackground(Color.white);
        arco.setBackground(Color.white);
        novoArco.setBackground(Color.white);

    }//GEN-LAST:event_btnAlterarArestaActionPerformed

    private void btnAlterarArestaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAlterarArestaMouseExited
        btnAlterarAresta.setContentAreaFilled(false);
    }//GEN-LAST:event_btnAlterarArestaMouseExited

    private void btnAlterarArestaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAlterarArestaMouseEntered
        btnAlterarAresta.setContentAreaFilled(true);
        btnAlterarAresta.setBackground(Color.gray);
    }//GEN-LAST:event_btnAlterarArestaMouseEntered

    private void btndeletarArestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeletarArestaActionPerformed
        display.setText("\t==========Aresta==========\n\n" + graph.removerEdge((String) cbOrigem.getSelectedItem(),
                (String) cbDestino.getSelectedItem()));
    }//GEN-LAST:event_btndeletarArestaActionPerformed

    private void btndeletarArestaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btndeletarArestaMouseExited
        btndeletarAresta.setContentAreaFilled(false);
    }//GEN-LAST:event_btndeletarArestaMouseExited

    private void btndeletarArestaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btndeletarArestaMouseEntered
        btndeletarAresta.setContentAreaFilled(true);
        btndeletarAresta.setBackground(Color.gray);
    }//GEN-LAST:event_btndeletarArestaMouseEntered

    private void btnAdicionarArestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarArestaActionPerformed
        if (txtNomeAresta.getText().isEmpty()) {
            display.setText("Nome invalido");
        } else {
            if (txtPesoAresta.getText().isEmpty()) {
                if (graph.addEdges((String) cbOrigem.getSelectedItem(), (String) cbDestino.getSelectedItem(), 0, txtNomeAresta.getText()).equals("erro")) {
                    display.setText("Existe uma aresta com esse nome!");
                } else {
                    ImprimeEdge();
                }
            } else if (graph.addEdges((String) cbOrigem.getSelectedItem(), (String) cbDestino.getSelectedItem(), Float.parseFloat(txtPesoAresta.getText()), txtNomeAresta.getText()).equals("erro")) {
                display.setText("Existe uma aresta com esse nome!");
            } else {
                ImprimeEdge();
            }
        }
        txtNomeAresta.setText("");
        txtPesoAresta.setText("");
    }//GEN-LAST:event_btnAdicionarArestaActionPerformed

    private void btnAdicionarArestaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdicionarArestaMouseExited
        btnAdicionarAresta.setContentAreaFilled(false);
    }//GEN-LAST:event_btnAdicionarArestaMouseExited

    private void btnAdicionarArestaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdicionarArestaMouseEntered
        btnAdicionarAresta.setContentAreaFilled(true);
        btnAdicionarAresta.setBackground(Color.gray);
    }//GEN-LAST:event_btnAdicionarArestaMouseEntered

    private void btnDeletarVerticeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarVerticeActionPerformed
        if (graph.removerNode(txtaddVertice.getText()) == true) {
            if (!graph.getNodes().isEmpty()) {
                display.setText(graph.ImprimeNode());
                gerarGraph();
            } else {
                display.setText("Lista: vazia");
            }
        } else {
            display.setForeground(Color.red);
            display.setText("Erro! não foi possivel remover\n\nCausas\n1ª - vertice inexistente\n2ª - Parametro vazio");
        }
        cbEditarOrigem.removeItem(txtaddVertice.getText());
        cbEditarDestino.removeItem(txtaddVertice.getText());
        cbVerificaOrigem.removeItem(txtaddVertice.getText());
        cbVerificaDestino.removeItem(txtaddVertice.getText());
        cbOrigem.removeItem(txtaddVertice.getText());
        cbDestino.removeItem(txtaddVertice.getText());
        cbNovaOrigem.removeItem(txtaddVertice.getText());
        cbNovoDestino.removeItem(txtaddVertice.getText());
        cbEditarVertice.removeItem(txtaddVertice.getText());

        txtaddVertice.setText("");
    }//GEN-LAST:event_btnDeletarVerticeActionPerformed

    private void btnDeletarVerticeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeletarVerticeMouseExited
        btnDeletarVertice.setContentAreaFilled(false);
    }//GEN-LAST:event_btnDeletarVerticeMouseExited

    private void btnDeletarVerticeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeletarVerticeMouseEntered
        btnDeletarVertice.setContentAreaFilled(true);
        btnDeletarVertice.setBackground(Color.gray);
    }//GEN-LAST:event_btnDeletarVerticeMouseEntered

    private void btnAlterarVerticeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarVerticeActionPerformed
        verticeAlterar.setBackground(Color.white);
        txtNovoVertice.setBackground(Color.white);
        txtNovoVertice.setEditable(true);
    }//GEN-LAST:event_btnAlterarVerticeActionPerformed

    private void btnAlterarVerticeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAlterarVerticeMouseExited
        btnAlterarVertice.setContentAreaFilled(false);
    }//GEN-LAST:event_btnAlterarVerticeMouseExited

    private void btnAlterarVerticeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAlterarVerticeMouseEntered
        btnAlterarVertice.setContentAreaFilled(true);
        btnAlterarVertice.setBackground(Color.gray);
    }//GEN-LAST:event_btnAlterarVerticeMouseEntered

    private void btnAdicionarVerticeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarVerticeActionPerformed
        if (txtaddVertice.getText().isEmpty()) {
            display.setForeground(Color.red);
            display.setText("Campo vertice está vazio!\nColoqueum nome valido");
        } else {
            if (graph.addNodes(txtaddVertice.getText()) == true) {
                display.setForeground(Color.red);
                display.setText("Vertice " + txtaddVertice.getText() + " existente!");
            } else {
                display.setForeground(Color.black);
                display.setText(graph.ImprimeNode());
                cbOrigem.addItem(txtaddVertice.getText());
                cbDestino.addItem(txtaddVertice.getText());
                cbNovaOrigem.addItem(txtaddVertice.getText());
                cbNovoDestino.addItem(txtaddVertice.getText());
                cbEditarVertice.addItem(txtaddVertice.getText());
                cbEditarDestino.addItem(txtaddVertice.getText());
                cbEditarOrigem.addItem(txtaddVertice.getText());
                cbVerificaOrigem.addItem(txtaddVertice.getText());
                cbVerificaDestino.addItem(txtaddVertice.getText());
            }
        }
        txtaddVertice.setText("");
    }//GEN-LAST:event_btnAdicionarVerticeActionPerformed

    private void btnAdicionarVerticeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdicionarVerticeMouseExited
        btnAdicionarVertice.setContentAreaFilled(false);
    }//GEN-LAST:event_btnAdicionarVerticeMouseExited

    private void btnAdicionarVerticeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdicionarVerticeMouseEntered
        btnAdicionarVertice.setContentAreaFilled(true);
        btnAdicionarVertice.setBackground(Color.gray);
    }//GEN-LAST:event_btnAdicionarVerticeMouseEntered

    private void btnListaAdjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListaAdjActionPerformed
        display.setText("\t==========Lista Adjacência==========\n\n" + graph.listaAdjacencia(graph));
    }//GEN-LAST:event_btnListaAdjActionPerformed

    private void btnMatrizIncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMatrizIncActionPerformed
        display.setText("\t==========Matriz Incidência==========\n\n" + graph.matrizIncidencia(graph));
    }//GEN-LAST:event_btnMatrizIncActionPerformed

    private void btnMatrizAdjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMatrizAdjActionPerformed
        display.setText("\t==========Matriz Adjacência==========\n\n" + graph.matrizAdjacencia());
    }//GEN-LAST:event_btnMatrizAdjActionPerformed

    private void iconSalvarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconSalvarMouseClicked
        salvarArquivo();
    }//GEN-LAST:event_iconSalvarMouseClicked

    private void iconAbrirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconAbrirMouseClicked
        abrirArquivo();
    }//GEN-LAST:event_iconAbrirMouseClicked

    private void iconNovoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconNovoMouseClicked
        novoArquivo();
    }//GEN-LAST:event_iconNovoMouseClicked

    private void btnGerarGraficoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarGraficoActionPerformed

        List<Edge> lista = new ArrayList<Edge>();
        for (int i = 0; i < graph.getEdges().size(); i++) {
            lista.add(graph.getEdges().get(i));
        }
        graph.getEdges().clear();

        for (int i = 0; i < lista.size(); i++) {
            graph.addEdges(lista.get(i).getNode2().getId(), lista.get(i).getNode1().getId(), lista.get(i).getPeso(), lista.get(i).getId());
        }

        XStream xstream = new XStream(new DomDriver());
        String xml = null;

        xstream.omitField(Edge.class, "node1");
        xstream.omitField(Edge.class, "node2");
        xstream.alias("graphml", Graphml.class);
        xstream.alias("graph", Graph.class);
        xstream.alias("node", Node.class);
        xstream.alias("edge", Edge.class);
        xstream.useAttributeFor("id", String.class);
        xstream.useAttributeFor("edgedefault", String.class);
        xstream.useAttributeFor("source", String.class);
        xstream.useAttributeFor("target", String.class);
        xstream.useAttributeFor("xmlns", String.class);
        xstream.useAttributeFor("degree", int.class);
        xstream.useAttributeFor("weight", float.class);
        xstream.addImplicitArray(Graph.class, "nodes");
        xstream.addImplicitArray(Graph.class, "edges");

        graphml.setGraph(graph);

        try {
            xml = xstream.toXML(graphml);
            File xmlFile = new File("resources\\arq.xml");
            xstream.toXML(graphml, new FileWriter(xmlFile));

            display.setText("Gerado com sucesso!!");

            graph.getEdges().clear();
            for (int i = 0; i < lista.size(); i++) {
                graph.addEdges(lista.get(i).getNode1().getId(), lista.get(i).getNode2().getId(), lista.get(i).getPeso(), lista.get(i).getId());
            }
        } catch (IOException ex) {
            display.setText("Erro ao gravar");
        }
        gerarGraph();
    }//GEN-LAST:event_btnGerarGraficoActionPerformed

    private void btnGerarGraficoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGerarGraficoMouseExited
        btnGerarGrafico.setContentAreaFilled(false);
    }//GEN-LAST:event_btnGerarGraficoMouseExited

    private void btnGerarGraficoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGerarGraficoMouseEntered
        btnGerarGrafico.setContentAreaFilled(true);
        btnGerarGrafico.setBackground(Color.gray);
    }//GEN-LAST:event_btnGerarGraficoMouseEntered

    private void btnMostrarVAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarVAActionPerformed
        display.setText(graph.imprimeListas());
    }//GEN-LAST:event_btnMostrarVAActionPerformed

    private void btnMostrarVAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMostrarVAMouseExited
        btnMostrarVA.setContentAreaFilled(false);
    }//GEN-LAST:event_btnMostrarVAMouseExited

    private void btnMostrarVAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMostrarVAMouseEntered
        btnMostrarVA.setContentAreaFilled(true);
        btnMostrarVA.setBackground(Color.gray);
    }//GEN-LAST:event_btnMostrarVAMouseEntered

    private void btnLimpaArestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpaArestaActionPerformed
        graph.getEdges().clear();
        display.setText(graph.imprimeListas());
    }//GEN-LAST:event_btnLimpaArestaActionPerformed

    private void btnLimpaArestaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpaArestaMouseExited
        btnLimpaAresta.setContentAreaFilled(false);
    }//GEN-LAST:event_btnLimpaArestaMouseExited

    private void btnLimpaArestaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpaArestaMouseEntered
        btnLimpaAresta.setContentAreaFilled(true);
        btnLimpaAresta.setBackground(Color.gray);
    }//GEN-LAST:event_btnLimpaArestaMouseEntered

    private void btnLimpaVAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpaVAActionPerformed
        cbOrigem.removeAllItems();
        cbDestino.removeAllItems();
        cbEditarOrigem.removeAllItems();
        cbEditarDestino.removeAllItems();
        cbVerificaOrigem.removeAllItems();
        cbVerificaDestino.removeAllItems();
        cbEditarVertice.removeAllItems();
        cbNovaOrigem.removeAllItems();
        cbNovoDestino.removeAllItems();

        graph.getNodes().clear();
        graph.getEdges().clear();
    }//GEN-LAST:event_btnLimpaVAActionPerformed

    private void btnLimpaVAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpaVAMouseExited
        btnLimpaVA.setContentAreaFilled(false);
    }//GEN-LAST:event_btnLimpaVAMouseExited

    private void btnLimpaVAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpaVAMouseEntered
        btnLimpaVA.setContentAreaFilled(true);
        btnLimpaVA.setBackground(Color.gray);
    }//GEN-LAST:event_btnLimpaVAMouseEntered

    private void btnConfirmarVerticeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnConfirmarVerticeMouseEntered
        btnConfirmarVertice.setContentAreaFilled(true);
        btnConfirmarVertice.setBackground(Color.gray);
    }//GEN-LAST:event_btnConfirmarVerticeMouseEntered

    private void btnConfirmarVerticeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnConfirmarVerticeMouseExited
        btnConfirmarVertice.setContentAreaFilled(false);
    }//GEN-LAST:event_btnConfirmarVerticeMouseExited

    private void btnConfirmarVerticeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarVerticeActionPerformed
        verticeAlterar.setBackground(Color.gray);
        txtNovoVertice.setBackground(Color.gray);
        txtNovoVertice.setEditable(false);
        display.setText(graph.EditarNode(cbEditarVertice.getSelectedItem().toString(), txtNovoVertice.getText()));
        graph.removerNode(cbEditarVertice.getSelectedItem().toString());
        graph.addNodes(cbEditarVertice.getSelectedItem().toString());

        cbEditarOrigem.removeItem(cbEditarVertice.getSelectedItem());
        cbEditarDestino.removeItem(cbEditarVertice.getSelectedItem());
        cbVerificaOrigem.removeItem(cbEditarVertice.getSelectedItem());
        cbVerificaDestino.removeItem(cbEditarVertice.getSelectedItem());
        cbOrigem.removeItem(cbEditarVertice.getSelectedItem());
        cbDestino.removeItem(cbEditarVertice.getSelectedItem());
        cbNovaOrigem.removeItem(cbEditarVertice.getSelectedItem());
        cbNovoDestino.removeItem(cbEditarVertice.getSelectedItem());
        cbEditarVertice.removeItem(cbEditarVertice.getSelectedItem());

        cbEditarOrigem.addItem(txtNovoVertice.getText());
        cbEditarDestino.addItem(txtNovoVertice.getText());
        cbVerificaOrigem.addItem(txtNovoVertice.getText());
        cbVerificaDestino.addItem(txtNovoVertice.getText());
        cbDestino.addItem(txtNovoVertice.getText());
        cbEditarVertice.addItem(txtNovoVertice.getText());
        cbOrigem.addItem(txtNovoVertice.getText());
        cbNovaOrigem.addItem(txtNovoVertice.getText());
        cbNovoDestino.addItem(txtNovoVertice.getText());

        txtNovoVertice.setText("");
    }//GEN-LAST:event_btnConfirmarVerticeActionPerformed

    private void btnCancelarVerticeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarVerticeMouseEntered
        btnCancelarVertice.setContentAreaFilled(true);
        btnCancelarVertice.setBackground(Color.gray);
    }//GEN-LAST:event_btnCancelarVerticeMouseEntered

    private void btnCancelarVerticeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarVerticeMouseExited
        btnCancelarVertice.setContentAreaFilled(false);
    }//GEN-LAST:event_btnCancelarVerticeMouseExited

    private void btnCancelarVerticeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarVerticeActionPerformed
        verticeAlterar.setBackground(Color.gray);
        txtNovoVertice.setBackground(Color.gray);
        txtNovoVertice.setEditable(false);
        txtNovoVertice.setText("");
    }//GEN-LAST:event_btnCancelarVerticeActionPerformed

    private void btnConfirmarVertice1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnConfirmarVertice1MouseEntered
        btnConfirmarVertice.setContentAreaFilled(true);
        btnConfirmarVertice.setBackground(Color.gray);
    }//GEN-LAST:event_btnConfirmarVertice1MouseEntered

    private void btnConfirmarVertice1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnConfirmarVertice1MouseExited
        btnConfirmarVertice.setContentAreaFilled(false);
    }//GEN-LAST:event_btnConfirmarVertice1MouseExited

    private void btnConfirmarVertice1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarVertice1ActionPerformed
        List<Node> a = new ArrayList<Node>();
        if (graph.getEdgedefault().equals("undirected")) {
            display.setText(graph.verificaCadeia((String) cbVerificaOrigem.getSelectedItem(), (String) cbVerificaDestino.getSelectedItem(), 0, a));
        } else {
            display.setText(graph.verificaCaminho((String) cbVerificaOrigem.getSelectedItem(), (String) cbVerificaDestino.getSelectedItem(), 0, a));

        }
    }//GEN-LAST:event_btnConfirmarVertice1ActionPerformed

    private void btnCancelarVertice1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarVertice1MouseEntered
        btnCancelarVertice.setContentAreaFilled(true);
        btnCancelarVertice.setBackground(Color.gray);
    }//GEN-LAST:event_btnCancelarVertice1MouseEntered

    private void btnCancelarVertice1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarVertice1MouseExited
        btnCancelarVertice.setContentAreaFilled(false);
    }//GEN-LAST:event_btnCancelarVertice1MouseExited

    private void btnCancelarVertice1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarVertice1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarVertice1ActionPerformed

    private void txtNomeArestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeArestaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeArestaActionPerformed

    private void txtNovoNomeArestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNovoNomeArestaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNovoNomeArestaActionPerformed

    private void btnConfirmarArestaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnConfirmarArestaMouseEntered
        btnConfirmarAresta.setContentAreaFilled(true);
        btnConfirmarAresta.setBackground(Color.gray);
    }//GEN-LAST:event_btnConfirmarArestaMouseEntered

    private void btnConfirmarArestaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnConfirmarArestaMouseExited
        btnConfirmarAresta.setContentAreaFilled(false);
    }//GEN-LAST:event_btnConfirmarArestaMouseExited

    private void btnConfirmarArestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarArestaActionPerformed
        if (graph.removerEdge((String) cbEditarOrigem.getSelectedItem(), (String) cbEditarDestino.getSelectedItem()).equals("Não foi possivel remover")) {
            display.setText("\t==========Alterar==========\n\nNão foi possivel realizar a alteração!\n"
                    + "Verifique as arestas e tente novamente...");
        } else {
            display.setText(graph.addEdges((String) cbNovaOrigem.getSelectedItem(), (String) cbNovoDestino.getSelectedItem(), Float.parseFloat(txtNovoPeso.getText()), txtNovoNomeAresta.getText()));
        }
        txtNovoNomeAresta.setText("");
        txtNovoPeso.setText("");
    }//GEN-LAST:event_btnConfirmarArestaActionPerformed

    private void btnCancelarArestaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarArestaMouseEntered
        btnCancelarAresta.setContentAreaFilled(true);
        btnCancelarAresta.setBackground(Color.gray);
    }//GEN-LAST:event_btnCancelarArestaMouseEntered

    private void btnCancelarArestaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarArestaMouseExited
        btnCancelarAresta.setContentAreaFilled(false);
    }//GEN-LAST:event_btnCancelarArestaMouseExited

    private void btnCancelarArestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarArestaActionPerformed
        txtNovoNomeAresta.setBackground(Color.gray);
        txtNovoPeso.setBackground(Color.gray);

        txtNovoNomeAresta.setEditable(false);
        txtNovoPeso.setEditable(false);

        arestaAlterar.setBackground(Color.gray);
        arco.setBackground(Color.gray);
        novoArco.setBackground(Color.gray);
    }//GEN-LAST:event_btnCancelarArestaActionPerformed

    private void btnBuscaProfMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscaProfMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscaProfMouseEntered

    private void btnBuscaProfMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscaProfMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscaProfMouseExited

    private void btnBuscaProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscaProfActionPerformed
        List<Node> a = new ArrayList<Node>();
        display.setText(graph.BuscaProf(graph.getNodes().get(0).getId(), "g", 0, a));
    }//GEN-LAST:event_btnBuscaProfActionPerformed

    private void btnDijkstraMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDijkstraMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDijkstraMouseEntered

    private void btnDijkstraMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDijkstraMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDijkstraMouseExited

    private void btnDijkstraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDijkstraActionPerformed
        display.setText(graph.Dijkstra());
    }//GEN-LAST:event_btnDijkstraActionPerformed

    private void btnKruskalMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnKruskalMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnKruskalMouseEntered

    private void btnKruskalMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnKruskalMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnKruskalMouseExited

    private void btnKruskalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKruskalActionPerformed
         String r = "";
        for (int i = 0; i < graph.getEdges().size(); i++) {
            listaRec.add(graph.getEdges().get(i));
        }
        display.setText(graph.Kruskal());

        graph.getEdges().clear();
        for (int i = 0; i < listaRec.size(); i++) { //Adiciona os vertices no combobox    
            graph.addEdge(listaRec.get(i));
        }
        listaRec.clear();
    }//GEN-LAST:event_btnKruskalActionPerformed

    private void btnPrimMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPrimMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPrimMouseEntered

    private void btnPrimMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPrimMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPrimMouseExited

    private void btnPrimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrimActionPerformed
        String r = "";

        for (int i = 0; i < graph.getEdges().size(); i++) {
            listaRec.add(graph.getEdges().get(i));
        }
        display.setText(graph.Prim());
        graph.getEdges().clear();
        for (int i = 0; i < listaRec.size(); i++) { //Adiciona os vertices no combobox    
            graph.addEdge(listaRec.get(i));
        }
        listaRec.clear();
    }//GEN-LAST:event_btnPrimActionPerformed

    public void getAlteracao(List<Node> node, List<Edge> edge, String nome, String tipo) {
        graph.setId(nome);
        graph.setEdgedefault(tipo);
        graph.setNodes(node);
        graph.setEdges(edge);

        lblNomeGrafo.setText(graph.getId());
        lblTipoGrafo.setText(graph.getEdgedefault());
        if (tipo.equals("directed")) {
            m = 1;
        } else {
            m = 0;
        }
        for (int i = 0; i < graph.getNodes().size(); i++) { //Adiciona os vertices no combobox    
            cbOrigem.addItem(graph.getNodes().get(i).getId());
            cbDestino.addItem(graph.getNodes().get(i).getId());
        }
        display.setText(graph.imprimeListas());
    }

    public void getCadeiaOuCaminho(List<Node> node, List<Edge> edge, String nome, String tipo, String r) {
        graph.setId(nome);
        graph.setEdgedefault(tipo);
        graph.setNodes(node);
        graph.setEdges(edge);

        lblNomeGrafo.setText(graph.getId());
        lblTipoGrafo.setText(graph.getEdgedefault());
        if (tipo.equals("directed")) {
            m = 1;
        } else {
            m = 0;
        }
        for (int i = 0; i < graph.getNodes().size(); i++) { //Adiciona os vertices no combobox    
            cbOrigem.addItem(graph.getNodes().get(i).getId());
            cbDestino.addItem(graph.getNodes().get(i).getId());
        }
        display.setText(r);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);  //Fecha o jframe sem fechar tudo

    }

    public void novoArquivo() {
        frmCriarGrafo fcg = new frmCriarGrafo();
        fcg.setVisible(true);
    }

    public void ImprimeEdge() {
        String r = "\t========== Aresta ==========\n\n Id\tOrigem\tDestino\tPeso\n";

        for (int i = 0; i < graph.getEdges().size(); i++) {
            r += " " + graph.getEdges().get(i).getId() + "\t" + graph.getEdges().get(i).getNode1().getId() + "\t" + graph.getEdges().get(i).getNode2().getId() + "\t" + graph.getEdges().get(i).getPeso() + "\n";
        }
        display.setText(r);
    }

    public void setNomeGrafo(String nome) {
        display.setText(nome);
        graph.setId(nome);
    }

    //Recebe os dados da tela frmCriarGrafo
    public void setAbrirGrafo(List<Node> node, List<Edge> edge, String nome, String tipo) {
        cbOrigem.removeAllItems();
        cbDestino.removeAllItems();
        cbEditarOrigem.removeAllItems();
        cbEditarDestino.removeAllItems();
        cbVerificaOrigem.removeAllItems();
        cbVerificaDestino.removeAllItems();
        cbEditarVertice.removeAllItems();
        cbNovaOrigem.removeAllItems();
        cbNovoDestino.removeAllItems();

        graph.setNodes(node);
        graph.setEdges(edge);
        graph.setId(nome);
        graph.setEdgedefault(tipo);

        if (tipo.equals("undirected")) {
            menuGrauEmissao.setEnabled(false);
            menuGrauRecepcao.setEnabled(false);
            menuFonte.setEnabled(false);
            menuSumidouro.setEnabled(false);

            lblTipoGrafo.setText("Não direcionado");
            m = 0;
        } else {
            menuGrauEmissao.setEnabled(true);
            menuGrauRecepcao.setEnabled(true);
            menuFonte.setEnabled(true);
            menuSumidouro.setEnabled(true);

            lblTipoGrafo.setText("Direcionado");
            m = 1;
        }
        for (int i = 0; i < graph.getNodes().size(); i++) { //Adiciona os vertices no combobox    
            cbOrigem.addItem(graph.getNodes().get(i).getId());
            cbDestino.addItem(graph.getNodes().get(i).getId());
            cbEditarOrigem.addItem(graph.getNodes().get(i).getId());
            cbEditarDestino.addItem(graph.getNodes().get(i).getId());
            cbVerificaOrigem.addItem(graph.getNodes().get(i).getId());
            cbVerificaDestino.addItem(graph.getNodes().get(i).getId());
            cbEditarVertice.addItem(graph.getNodes().get(i).getId());
            cbNovaOrigem.addItem(graph.getNodes().get(i).getId());
            cbNovoDestino.addItem(graph.getNodes().get(i).getId());
        }
        lblNomeGrafo.setText(graph.getId());
        display.setText(graph.imprimeListas());

        JOptionPane.showMessageDialog(null, "Arquivo carregado com sucesso...");
    }

    public void salvarArquivo() {
        graph.getGrau();
        graphml.getGraph();

        JFileChooser arquivo = new JFileChooser();
        FileNameExtensionFilter filtroXML = new FileNameExtensionFilter("Arquivos XML", "xml");
        arquivo.addChoosableFileFilter(filtroXML);
        arquivo.setAcceptAllFileFilterUsed(false);

        if (arquivo.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            display.setText(arquivo.getSelectedFile().getAbsolutePath());
            choose = display.getText();
        }

        XStream xstream = new XStream(new DomDriver());
        String xml = null;

        xstream.omitField(Edge.class, "node1");
        xstream.omitField(Edge.class, "node2");
        xstream.alias("graphml", Graphml.class);
        xstream.alias("graph", Graph.class);
        xstream.alias("node", Node.class);
        xstream.alias("edge", Edge.class);
        xstream.useAttributeFor("id", String.class);
        xstream.useAttributeFor("edgedefault", String.class);
        xstream.useAttributeFor("source", String.class);
        xstream.useAttributeFor("target", String.class);
        xstream.useAttributeFor("xmlns", String.class);
        xstream.useAttributeFor("degree", int.class);
        xstream.useAttributeFor("weight", float.class);
        xstream.addImplicitArray(Graph.class, "nodes");
        xstream.addImplicitArray(Graph.class, "edges");
        graphml.setGraph(graph);

        try {
            xml = xstream.toXML(graphml);
            System.out.println("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + xml);
            File file = new File(choose + ".xml");
            PrintWriter print = new PrintWriter(file);
            print.write(xml);
            print.flush();
            print.close();
            display.setText(xml);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(frmInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void abrirArquivo() {
        cbOrigem.removeAllItems();
        cbDestino.removeAllItems();
        cbEditarOrigem.removeAllItems();
        cbEditarDestino.removeAllItems();
        cbVerificaOrigem.removeAllItems();
        cbVerificaDestino.removeAllItems();
        cbEditarVertice.removeAllItems();
        cbNovaOrigem.removeAllItems();
        cbNovoDestino.removeAllItems();

        JFileChooser arquivo = new JFileChooser();
        FileNameExtensionFilter filtroXML = new FileNameExtensionFilter("Arquivos XML", "xml");
        arquivo.addChoosableFileFilter(filtroXML);
        arquivo.setAcceptAllFileFilterUsed(false);
        if (arquivo.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            display.setText(arquivo.getSelectedFile().getAbsolutePath());
            choose = display.getText();
            try {
                FileReader leitor = new FileReader(choose);
                XStream xstream = new XStream(new DomDriver());

                xstream.omitField(Edge.class, "node1");
                xstream.omitField(Edge.class, "node2");
                xstream.alias("graphml", Graphml.class);
                xstream.alias("graph", Graph.class);
                xstream.alias("node", Node.class);
                xstream.alias("edge", Edge.class);
                xstream.useAttributeFor("id", String.class);
                xstream.useAttributeFor("edgedefault", String.class);
                xstream.useAttributeFor("source", String.class);
                xstream.useAttributeFor("target", String.class);
                xstream.useAttributeFor("xmlns", String.class);
                xstream.useAttributeFor("id", String.class);
                xstream.useAttributeFor("degree", int.class);
                xstream.useAttributeFor("weight", float.class);
                xstream.addImplicitArray(Graph.class, "nodes");
                xstream.addImplicitArray(Graph.class, "edges");

                graphml = null;
                graphml = (Graphml) xstream.fromXML(leitor);
                ArrayList lst = (ArrayList) graphml.getGraph().getEdges();
                graphml.getGraph().setNodes(new ArrayList<Node>());
                graphml.getGraph().setEdges(new ArrayList<Edge>());

                for (Object e : lst) {
                    if (e instanceof Node) {
                        graphml.getGraph().getNodes().add((Node) e);
                    } else {
                        graphml.getGraph().getEdges().add((Edge) e);
                    }
                }

                for (Edge edge : graphml.getGraph().getEdges()) {
                    for (Node no : graphml.getGraph().getNodes()) {
                        if (no.getId().equals(edge.getSoucer())) {
                            edge.setNode1(no);
                        }
                        if (no.getId().equals(edge.getTarget())) {
                            edge.setNode2(no);
                        }
                    }
                }
                listaNode = (ArrayList<Node>) graphml.getGraph().getNodes();
                listaEdge = (ArrayList<Edge>) graphml.getGraph().getEdges();

                graph.setNodes(listaNode);
                graph.setEdges(listaEdge);

                String r = "", r2 = "";
                for (int i = 0; i < graph.getNodes().size(); i++) {
                    cbOrigem.addItem(graph.getNodes().get(i).getId());
                    cbDestino.addItem(graph.getNodes().get(i).getId());
                    cbEditarOrigem.addItem(graph.getNodes().get(i).getId());
                    cbEditarDestino.addItem(graph.getNodes().get(i).getId());
                    cbVerificaOrigem.addItem(graph.getNodes().get(i).getId());
                    cbVerificaDestino.addItem(graph.getNodes().get(i).getId());
                    cbEditarVertice.addItem(graph.getNodes().get(i).getId());
                    cbNovaOrigem.addItem(graph.getNodes().get(i).getId());
                    cbNovoDestino.addItem(graph.getNodes().get(i).getId());
                }
                graph.setId(graphml.getGraph().getId());
                graph.setEdgedefault(graphml.getGraph().getEdgedefault());
                lblNomeGrafo.setText(graph.getId());
//                lblTipoGrafo.setText(graph.getEdgedefault());

                if (graph.getEdgedefault().equals("directed")) {
                    graph.setEdgedefault("directed");
                    menuGrauEmissao.setEnabled(true);
                    menuGrauRecepcao.setEnabled(true);
                    menuFonte.setEnabled(true);
                    menuSumidouro.setEnabled(true);
                    lblTipoGrafo.setText("Direcionado");
                    m = 1;
                } else {
                    graph.setEdgedefault("undirected");
                    menuGrauEmissao.setEnabled(false);
                    menuGrauRecepcao.setEnabled(false);
                    menuFonte.setEnabled(false);
                    menuSumidouro.setEnabled(false);
                    lblTipoGrafo.setText("Não direcionado");
                    m = 0;
                }

            } catch (FileNotFoundException ex) {
                Logger.getLogger(frmInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public void setNovoGrafo(String nome, String qt, String tipo) {
        if (tipo.equals("directed")) {
            graph.setEdgedefault("directed");
            menuGrauEmissao.setEnabled(true);
            menuGrauRecepcao.setEnabled(true);
            menuFonte.setEnabled(true);
            menuSumidouro.setEnabled(true);

            lblTipoGrafo.setText("Direcionado");

            m = 1;
        } else {
            graph.setEdgedefault("undirected");
            menuGrauEmissao.setEnabled(false);
            menuGrauRecepcao.setEnabled(false);
            menuFonte.setEnabled(false);
            menuSumidouro.setEnabled(false);

            lblTipoGrafo.setText("Não direcionado");

            m = 0;
        }
        graph.setId(nome);

        for (int i = 0; i < Integer.parseInt(qt); i++) {
            Node node = new Node();
            node.setId(Integer.toString(i + 1));
            graph.addNode(node);
            cbOrigem.addItem(Integer.toString(i + 1));
            cbDestino.addItem(Integer.toString(i + 1));
            cbEditarOrigem.addItem(Integer.toString(i + 1));
            cbEditarDestino.addItem(Integer.toString(i + 1));
            cbVerificaOrigem.addItem(Integer.toString(i + 1));
            cbVerificaDestino.addItem(Integer.toString(i + 1));
            cbEditarVertice.addItem(Integer.toString(i + 1));
            cbNovaOrigem.addItem(Integer.toString(i + 1));
            cbNovoDestino.addItem(Integer.toString(i + 1));
        }
        lblNomeGrafo.setText(graph.getId());

        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);  //Fecha o jframe sem fechar tudo
    }

    public void gerarGraph() {
        try {
            ViewGraph.generateViewGraphByFrame("resources\\arq.xml");
        } catch (EGraphViewExcpetion ex) {
            System.out.println("-->" + ex.getMensagem());
        }
    }

    public void centralizarComponente() {
        Dimension ds = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension dw = getSize();
        setLocation((ds.width - dw.width) / 4, (ds.height - dw.height) / 30);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel arco;
    private javax.swing.JPanel arestaAlterar;
    private javax.swing.JButton btnAdicionarAresta;
    private javax.swing.JButton btnAdicionarVertice;
    private javax.swing.JButton btnAlterarAresta;
    private javax.swing.JButton btnAlterarVertice;
    private javax.swing.JButton btnBuscaProf;
    private javax.swing.JButton btnCancelarAresta;
    private javax.swing.JButton btnCancelarVertice;
    private javax.swing.JButton btnCancelarVertice1;
    private javax.swing.JButton btnConfirmarAresta;
    private javax.swing.JButton btnConfirmarVertice;
    private javax.swing.JButton btnConfirmarVertice1;
    private javax.swing.JButton btnDeletarVertice;
    private javax.swing.JButton btnDijkstra;
    private javax.swing.JButton btnGerarGrafico;
    private javax.swing.JButton btnKruskal;
    private javax.swing.JButton btnLimpaAresta;
    private javax.swing.JButton btnLimpaVA;
    private javax.swing.JButton btnListaAdj;
    private javax.swing.JButton btnMatrizAdj;
    private javax.swing.JButton btnMatrizInc;
    private javax.swing.JButton btnMostrarVA;
    private javax.swing.JButton btnPrim;
    private javax.swing.JButton btndeletarAresta;
    private javax.swing.JComboBox<String> cbDestino;
    private javax.swing.JComboBox<String> cbEditarDestino;
    private javax.swing.JComboBox<String> cbEditarOrigem;
    private javax.swing.JComboBox<String> cbEditarVertice;
    private javax.swing.JComboBox<String> cbNovaOrigem;
    private javax.swing.JComboBox<String> cbNovoDestino;
    private javax.swing.JComboBox<String> cbOrigem;
    private javax.swing.JComboBox<String> cbVerificaDestino;
    private javax.swing.JComboBox<String> cbVerificaOrigem;
    private javax.swing.JTextArea display;
    private javax.swing.JLabel iconAbrir;
    private javax.swing.JLabel iconNovo;
    private javax.swing.JLabel iconSalvar;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblArco;
    private javax.swing.JLabel lblArco1;
    private javax.swing.JLabel lblDestino;
    private javax.swing.JLabel lblNo;
    private javax.swing.JLabel lblNo1;
    private javax.swing.JLabel lblNo2;
    private javax.swing.JLabel lblNo3;
    private javax.swing.JLabel lblNomeGrafo;
    private javax.swing.JLabel lblNovaOrigem;
    private javax.swing.JLabel lblNovo;
    private javax.swing.JLabel lblNovoDestino;
    private javax.swing.JLabel lblNovoNomeArco;
    private javax.swing.JLabel lblNovoPeso;
    private javax.swing.JLabel lblOrigem;
    private javax.swing.JLabel lblTipoGrafo;
    private javax.swing.JMenuItem menuAbrir;
    private javax.swing.JMenuItem menuAdjacente;
    private javax.swing.JMenu menuArquivo;
    private javax.swing.JMenuItem menuConjunto;
    private javax.swing.JMenu menuExibir;
    private javax.swing.JMenuItem menuFonte;
    private javax.swing.JMenuItem menuGrau;
    private javax.swing.JMenuItem menuGrauEmissao;
    private javax.swing.JMenuItem menuGrauRecepcao;
    private javax.swing.JMenuItem menuIncidentes;
    private javax.swing.JMenuItem menuInfo;
    private javax.swing.JMenuItem menuMatriz;
    private javax.swing.JMenuItem menuNovo;
    private javax.swing.JMenuItem menuOrdem;
    private javax.swing.JMenuItem menuSair;
    private javax.swing.JMenuItem menuSalvar;
    private javax.swing.JMenuItem menuSumidouro;
    private javax.swing.JPanel novoArco;
    private javax.swing.JTextField txtNomeAresta;
    private javax.swing.JTextField txtNovoNomeAresta;
    private javax.swing.JTextField txtNovoPeso;
    private javax.swing.JTextField txtNovoVertice;
    private javax.swing.JTextField txtPesoAresta;
    private javax.swing.JTextField txtaddVertice;
    private javax.swing.JPanel verticeAlterar;
    // End of variables declaration//GEN-END:variables
}
